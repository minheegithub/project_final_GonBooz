<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- SQL 계정 정보 bean 
	by최민희,데이터베이스와 연결되는 드라이버클래스와 연결 URL-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"               destroy-method="close"> 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> 
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe" /> 
		<property name="username" value="gongbooz"/> 
		<property name="password" value="gongbooz"/> 
	</bean>
	
	<!-- SqlSessionFactory --> <!-- mybatis config --><!-- mapper -->
	<!-- 연결에 참조하기 위한 mybatis, 파일 두개 참조 bean 2개 생성-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /><!--by최민희, setter메소드를 통한 의존관계 설정  -->
		<property name="configLocation" value="classpath:/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:/mapper/*.xml" />
	</bean>

	<!-- SqlSessionTemplate :  mybatis-spring  -->
	<!-- 참조용 bean을 이용해 SQL에 연결하기 위한 bean 2개 -->
	
	<!-- SqlSessionTemplate은 SqlSessionFactory를 생성자로 주입해서 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" > 
		<constructor-arg  ref="sqlSessionFactory" /> 
	</bean>

	<!-- spring 내에서 SQL 처리값을 반환받을 DAO 매핑 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="com.gb.wn.main.DAO" />
	</bean>
	
	<!-- 트랜잭션 관련-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> 
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/> 
	
	<!-- navermail설정 -->     <!-- 이메일주소 체크 1. root-context.xml /  2. memberController 216번, 288번줄  -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
     <property name="host" value="smtp.naver.com"/> <!-- 메이서버 호스트 -->
     <property name="port" value="465"/> <!-- 메이서버 포트번호 -->
     <property name="username" value="minhehot@naver.com"/>  <!-- 자신의 이메일 아이디 -->
     <property name="password" value="xdchlp915139"/> <!--자신의 비밀번호  -->
     
       <!-- 보안연결 SSL과 관련된 설정 -->
     <property name="javaMailProperties">
      <props>
      <!-- <prop key="mail.transport.protocol">smtp</prop> -->
      <prop key="mail.smtp.auth">true</prop>
      <prop key="mail.smtp.starttls.enable">true</prop>
      <prop key="mail.smtps.checkserveridentity">true</prop>
      <prop key="mail.smtps.ssl.trust">*</prop>
      
         
      <prop key="mail.smtp.ssl.enable">true</prop>   	 
   	  <!-- <prop key="mail.transport.protocol">smtp</prop> -->
   
      <prop key="mail.debug">true</prop>
      <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
      </props>
     </property>
    </bean>
    
</beans>
